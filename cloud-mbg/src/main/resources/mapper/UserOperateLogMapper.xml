<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxxg.springcloud.cloudmbg.mapper.UserOperateLogMapper">
  <resultMap id="BaseResultMap" type="com.qxxg.springcloud.cloudmbg.entity.UserOperateLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="object_id" jdbcType="VARCHAR" property="objectId" />
    <result column="object_name" jdbcType="VARCHAR" property="objectName" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_name" jdbcType="VARCHAR" property="operateName" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="log_type" jdbcType="INTEGER" property="logType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, object_id, object_name, operator, operate_name, operate_time, ip, remark, log_type
  </sql>
  <select id="selectByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_operate_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_operate_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLogExample">
    delete from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_operate_log (object_id, object_name, operator, 
      operate_name, operate_time, ip, 
      remark, log_type)
    values (#{objectId,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operateName,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_operate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="objectId != null">
        object_id,
      </if>
      <if test="objectName != null">
        object_name,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operateName != null">
        operate_name,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="logType != null">
        log_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="objectId != null">
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLogExample" resultType="java.lang.Long">
    select count(*) from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_operate_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.objectId != null">
        object_id = #{record.objectId,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null">
        object_name = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operateName != null">
        operate_name = #{record.operateName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null">
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_operate_log
    set id = #{record.id,jdbcType=BIGINT},
      object_id = #{record.objectId,jdbcType=VARCHAR},
      object_name = #{record.objectName,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      operate_name = #{record.operateName,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLog">
    update user_operate_log
    <set>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null">
        object_name = #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qxxg.springcloud.cloudmbg.entity.UserOperateLog">
    update user_operate_log
    set object_id = #{objectId,jdbcType=VARCHAR},
      object_name = #{objectName,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>