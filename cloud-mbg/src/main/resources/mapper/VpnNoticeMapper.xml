<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxxg.springcloud.cloudmbg.mapper.VpnNoticeMapper">
  <resultMap id="BaseResultMap" type="com.qxxg.springcloud.cloudmbg.entity.VpnNotice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="notice_type" jdbcType="INTEGER" property="noticeType" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="publisher_name" jdbcType="VARCHAR" property="publisherName" />
    <result column="valid_time" jdbcType="TIMESTAMP" property="validTime" />
    <result column="img_link" jdbcType="VARCHAR" property="imgLink" />
    <result column="article_link" jdbcType="VARCHAR" property="articleLink" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notice_title, notice_content, publish_time, state, create_time, notice_type, 
    creator, creator_name, publisher, publisher_name, valid_time, img_link, article_link
  </sql>
  <select id="selectByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vpn_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vpn_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vpn_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNoticeExample">
    delete from vpn_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNotice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vpn_notice (notice_title, notice_content, publish_time, 
      state, create_time, notice_type, 
      creator, creator_name, publisher, 
      publisher_name, valid_time, img_link, 
      article_link)
    values (#{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{noticeType,jdbcType=INTEGER}, 
      #{creator,jdbcType=VARCHAR}, #{creatorName,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, 
      #{publisherName,jdbcType=VARCHAR}, #{validTime,jdbcType=TIMESTAMP}, #{imgLink,jdbcType=VARCHAR}, 
      #{articleLink,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNotice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vpn_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeTitle != null">
        notice_title,
      </if>
      <if test="noticeContent != null">
        notice_content,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorName != null">
        creator_name,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="publisherName != null">
        publisher_name,
      </if>
      <if test="validTime != null">
        valid_time,
      </if>
      <if test="imgLink != null">
        img_link,
      </if>
      <if test="articleLink != null">
        article_link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeTitle != null">
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null">
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publisherName != null">
        #{publisherName,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null">
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imgLink != null">
        #{imgLink,jdbcType=VARCHAR},
      </if>
      <if test="articleLink != null">
        #{articleLink,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNoticeExample" resultType="java.lang.Long">
    select count(*) from vpn_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vpn_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.noticeTitle != null">
        notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeContent != null">
        notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorName != null">
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.publisherName != null">
        publisher_name = #{record.publisherName,jdbcType=VARCHAR},
      </if>
      <if test="record.validTime != null">
        valid_time = #{record.validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imgLink != null">
        img_link = #{record.imgLink,jdbcType=VARCHAR},
      </if>
      <if test="record.articleLink != null">
        article_link = #{record.articleLink,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vpn_notice
    set id = #{record.id,jdbcType=BIGINT},
      notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      notice_type = #{record.noticeType,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_name = #{record.creatorName,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      publisher_name = #{record.publisherName,jdbcType=VARCHAR},
      valid_time = #{record.validTime,jdbcType=TIMESTAMP},
      img_link = #{record.imgLink,jdbcType=VARCHAR},
      article_link = #{record.articleLink,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNotice">
    update vpn_notice
    <set>
      <if test="noticeTitle != null">
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null">
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null">
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publisherName != null">
        publisher_name = #{publisherName,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null">
        valid_time = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imgLink != null">
        img_link = #{imgLink,jdbcType=VARCHAR},
      </if>
      <if test="articleLink != null">
        article_link = #{articleLink,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnNotice">
    update vpn_notice
    set notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      notice_type = #{noticeType,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      publisher_name = #{publisherName,jdbcType=VARCHAR},
      valid_time = #{validTime,jdbcType=TIMESTAMP},
      img_link = #{imgLink,jdbcType=VARCHAR},
      article_link = #{articleLink,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>