<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxxg.springcloud.cloudmbg.mapper.VpnOrderMapper">
  <resultMap id="BaseResultMap" type="com.qxxg.springcloud.cloudmbg.entity.VpnOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="order_amount" jdbcType="DOUBLE" property="orderAmount" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_user_id" jdbcType="BIGINT" property="payUserId" />
    <result column="order_delete" jdbcType="INTEGER" property="orderDelete" />
    <result column="pay_user_name" jdbcType="VARCHAR" property="payUserName" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, order_status, order_amount, pay_type, pay_time, pay_user_id, order_delete, 
    pay_user_name, reason, order_time
  </sql>
  <select id="selectByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vpn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vpn_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vpn_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrderExample">
    delete from vpn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vpn_order (product_id, order_status, order_amount, 
      pay_type, pay_time, pay_user_id, 
      order_delete, pay_user_name, reason, 
      order_time)
    values (#{productId,jdbcType=BIGINT}, #{orderStatus,jdbcType=INTEGER}, #{orderAmount,jdbcType=DOUBLE}, 
      #{payType,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, #{payUserId,jdbcType=BIGINT}, 
      #{orderDelete,jdbcType=INTEGER}, #{payUserName,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{orderTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vpn_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payUserId != null">
        pay_user_id,
      </if>
      <if test="orderDelete != null">
        order_delete,
      </if>
      <if test="payUserName != null">
        pay_user_name,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payUserId != null">
        #{payUserId,jdbcType=BIGINT},
      </if>
      <if test="orderDelete != null">
        #{orderDelete,jdbcType=INTEGER},
      </if>
      <if test="payUserName != null">
        #{payUserName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrderExample" resultType="java.lang.Long">
    select count(*) from vpn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vpn_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payUserId != null">
        pay_user_id = #{record.payUserId,jdbcType=BIGINT},
      </if>
      <if test="record.orderDelete != null">
        order_delete = #{record.orderDelete,jdbcType=INTEGER},
      </if>
      <if test="record.payUserName != null">
        pay_user_name = #{record.payUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vpn_order
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_user_id = #{record.payUserId,jdbcType=BIGINT},
      order_delete = #{record.orderDelete,jdbcType=INTEGER},
      pay_user_name = #{record.payUserName,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrder">
    update vpn_order
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payUserId != null">
        pay_user_id = #{payUserId,jdbcType=BIGINT},
      </if>
      <if test="orderDelete != null">
        order_delete = #{orderDelete,jdbcType=INTEGER},
      </if>
      <if test="payUserName != null">
        pay_user_name = #{payUserName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qxxg.springcloud.cloudmbg.entity.VpnOrder">
    update vpn_order
    set product_id = #{productId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=INTEGER},
      order_amount = #{orderAmount,jdbcType=DOUBLE},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_user_id = #{payUserId,jdbcType=BIGINT},
      order_delete = #{orderDelete,jdbcType=INTEGER},
      pay_user_name = #{payUserName,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>